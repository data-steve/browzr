{
    "collab_server" : "",
    "contents" : "<div class=\"entry-content\">\n\t\t\t\t\t\t<p><a href=\"http://chrisladroue.com/wp-content/uploads/2014/11/multilingualShinyApp1.png\"><img src=\"http://chrisladroue.com/wp-content/uploads/2014/11/multilingualShinyApp1.png\" alt=\"\" title=\"multilingualShinyApp\" width=\"252\" height=\"174\" class=\"alignleft size-full wp-image-1163\"/></a>I was reading <a href=\"http://withr.me/blog/2014/10/17/design-a-bilingual-shiny-application/\">this interesting post</a> about how to build a multi-lingual <tt>Shiny</tt> app. I’m also building a multi-lingual <tt>Shiny</tt> app and came up with slightly different take on it.</p>\n<p>First, I don’t use a function for finding the translation, but a 2D list. This way I can directly get to the translation with a simple access to the list.</p>\n\n<div class=\"my_syntax_box\"><span class=\"my_syntax_selecall\"><a href=\"javascript:;\" onclick=\"selectCode(this); return false;\">Select All</a> </span><span class=\"my_syntax_Bar\">Code:</span><div class=\"my_syntax\"><table><tr><td class=\"line_numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"code\"><pre class=\"rsplus\" style=\"font-family:monospace;\">translation <span style=\"color: #080;\">&lt;-</span> <span style=\"color: #0000FF; font-weight: bold;\">list</span><span style=\"color: #080;\">(</span>\n  <span style=\"color: #ff0000;\">\"youhaveselected\"</span> <span style=\"color: #080;\">=</span> <span style=\"color: #0000FF; font-weight: bold;\">list</span><span style=\"color: #080;\">(</span><span style=\"color: #ff0000;\">\"en\"</span> <span style=\"color: #080;\">=</span> <span style=\"color: #ff0000;\">\"You have selected:\"</span>, <span style=\"color: #ff0000;\">\"fr\"</span><span style=\"color: #080;\">=</span><span style=\"color: #ff0000;\">\"Vous avez sélectionné:\"</span><span style=\"color: #080;\">)</span>,\n  <span style=\"color: #ff0000;\">\"greetings\"</span> <span style=\"color: #080;\">=</span> <span style=\"color: #0000FF; font-weight: bold;\">list</span><span style=\"color: #080;\">(</span><span style=\"color: #ff0000;\">\"en\"</span> <span style=\"color: #080;\">=</span> <span style=\"color: #ff0000;\">\"Hello\"</span>, <span style=\"color: #ff0000;\">\"fr\"</span><span style=\"color: #080;\">=</span><span style=\"color: #ff0000;\">\"Bonjour\"</span><span style=\"color: #080;\">)</span>\n  <span style=\"color: #080;\">)</span>\n<span style=\"color: #228B22;\"># then:</span>\ntranslation<span style=\"color: #080;\">[</span><span style=\"color: #080;\">[</span><span style=\"color: #ff0000;\">'greetings'</span><span style=\"color: #080;\">]</span><span style=\"color: #080;\">]</span><span style=\"color: #080;\">[</span><span style=\"color: #080;\">[</span><span style=\"color: #ff0000;\">'en'</span><span style=\"color: #080;\">]</span><span style=\"color: #080;\">]</span> <span style=\"color: #228B22;\"># Hello</span>\ntranslation<span style=\"color: #080;\">[</span><span style=\"color: #080;\">[</span><span style=\"color: #ff0000;\">'greetings'</span><span style=\"color: #080;\">]</span><span style=\"color: #080;\">]</span><span style=\"color: #080;\">[</span><span style=\"color: #080;\">[</span><span style=\"color: #ff0000;\">'fr'</span><span style=\"color: #080;\">]</span><span style=\"color: #080;\">]</span>  <span style=\"color: #228B22;\"># Bonjour</span></pre></td></tr></table></div></div>\n\n<p>Second, I don’t use <tt>observe</tt>, as I didn’t find it necessary. I simply have a radio button for switching between languages, and a function <tt>tr()</tt> to translate a phrase or a list of phrases. Like in the original post, the UI is built from <tt>server.R</tt> using <tt>renderUI()</tt>.</p>\n\n<div class=\"my_syntax_box\"><span class=\"my_syntax_selecall\"><a href=\"javascript:;\" onclick=\"selectCode(this); return false;\">Select All</a> </span><span class=\"my_syntax_Bar\">Code:</span><div class=\"my_syntax\"><table><tr><td class=\"line_numbers\"><pre>1\n2\n3\n</pre></td><td class=\"code\"><pre class=\"rsplus\" style=\"font-family:monospace;\">  tr <span style=\"color: #080;\">&lt;-</span> <span style=\"color: #0000FF; font-weight: bold;\">function</span><span style=\"color: #080;\">(</span><span style=\"color: #0000FF; font-weight: bold;\">text</span><span style=\"color: #080;\">)</span><span style=\"color: #080;\">{</span> <span style=\"color: #228B22;\"># translates text into current language</span>\n    <span style=\"color: #0000FF; font-weight: bold;\">sapply</span><span style=\"color: #080;\">(</span><span style=\"color: #0000FF; font-weight: bold;\">text</span>,<span style=\"color: #0000FF; font-weight: bold;\">function</span><span style=\"color: #080;\">(</span>s<span style=\"color: #080;\">)</span> translation<span style=\"color: #080;\">[</span><span style=\"color: #080;\">[</span>s<span style=\"color: #080;\">]</span><span style=\"color: #080;\">]</span><span style=\"color: #080;\">[</span><span style=\"color: #080;\">[</span>input$language<span style=\"color: #080;\">]</span><span style=\"color: #080;\">]</span>, USE.<span style=\"\">NAMES</span><span style=\"color: #080;\">=</span>FALSE<span style=\"color: #080;\">)</span>\n  <span style=\"color: #080;\">}</span></pre></td></tr></table></div></div>\n\n\n<div class=\"my_syntax_box\"><span class=\"my_syntax_selecall\"><a href=\"javascript:;\" onclick=\"selectCode(this); return false;\">Select All</a> </span><span class=\"my_syntax_Bar\">Code:</span><div class=\"my_syntax\"><table><tr><td class=\"line_numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n</pre></td><td class=\"code\"><pre class=\"rsplus\" style=\"font-family:monospace;\"> \n  <span style=\"color: #228B22;\"># UI</span>\n  output$uiObs <span style=\"color: #080;\">&lt;-</span> renderUI<span style=\"color: #080;\">(</span><span style=\"color: #080;\">{</span>\n    sliderInput<span style=\"color: #080;\">(</span><span style=\"color: #ff0000;\">\"obs\"</span>, tr<span style=\"color: #080;\">(</span><span style=\"color: #ff0000;\">\"numberOfObservations\"</span><span style=\"color: #080;\">)</span>,  \n                  <span style=\"color: #0000FF; font-weight: bold;\">min</span> <span style=\"color: #080;\">=</span> <span style=\"color: #ff0000;\">1</span>, <span style=\"color: #0000FF; font-weight: bold;\">max</span> <span style=\"color: #080;\">=</span> <span style=\"color: #ff0000;\">100</span>, value <span style=\"color: #080;\">=</span> <span style=\"color: #ff0000;\">50</span><span style=\"color: #080;\">)</span>\n  <span style=\"color: #080;\">}</span><span style=\"color: #080;\">)</span>\n \n  output$uiWeekdays <span style=\"color: #080;\">&lt;-</span> renderUI<span style=\"color: #080;\">(</span><span style=\"color: #080;\">{</span>\n    <span style=\"color: #228B22;\"># Using a named list in order to pass the same value regardless of the label (which changes with the language)</span>\n    daysValue <span style=\"color: #080;\">&lt;-</span> <span style=\"color: #0000FF; font-weight: bold;\">c</span><span style=\"color: #080;\">(</span><span style=\"color: #ff0000;\">\"Monday\"</span>, <span style=\"color: #ff0000;\">\"Tuesday\"</span>, <span style=\"color: #ff0000;\">\"Wednesday\"</span>, <span style=\"color: #ff0000;\">\"Thursday\"</span>, <span style=\"color: #ff0000;\">\"Friday\"</span>, <span style=\"color: #ff0000;\">\"Saturday\"</span>, <span style=\"color: #ff0000;\">\"Sunday\"</span><span style=\"color: #080;\">)</span>\n    days <span style=\"color: #080;\">&lt;-</span> <span style=\"color: #0000FF; font-weight: bold;\">structure</span><span style=\"color: #080;\">(</span>daysValue, .<span style=\"\">Names</span> <span style=\"color: #080;\">=</span> tr<span style=\"color: #080;\">(</span>daysValue<span style=\"color: #080;\">)</span><span style=\"color: #080;\">)</span>\n \n    selectInput<span style=\"color: #080;\">(</span>inputId   <span style=\"color: #080;\">=</span> <span style=\"color: #ff0000;\">\"weekdays\"</span>,\n                label     <span style=\"color: #080;\">=</span> tr<span style=\"color: #080;\">(</span><span style=\"color: #ff0000;\">\"Selection:\"</span><span style=\"color: #080;\">)</span>,\n                choices   <span style=\"color: #080;\">=</span> days,\n                multiple  <span style=\"color: #080;\">=</span> TRUE<span style=\"color: #080;\">)</span>\n  <span style=\"color: #080;\">}</span><span style=\"color: #080;\">)</span></pre></td></tr></table></div></div>\n\n<p>To make things easier for the translators, the dictionary is stored as a csv file, which is easy to edit. A small <tt>R</tt> script turns the csv into the expected 2D list, and saves it in a binary file, to avoid re-processing the file every time the user decides to switch language.</p>\n\n<div class=\"my_syntax_box\"><span class=\"my_syntax_selecall\"><a href=\"javascript:;\" onclick=\"selectCode(this); return false;\">Select All</a> </span><span class=\"my_syntax_Bar\">Code:</span><div class=\"my_syntax\"><table><tr><td class=\"line_numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre></td><td class=\"code\"><pre class=\"rsplus\" style=\"font-family:monospace;\"><span style=\"color: #228B22;\"># update the processed translation file translation.bin</span>\n<span style=\"color: #228B22;\"># run this every time dictionary.csv is updated </span>\n<span style=\"color: #228B22;\"># it reads the look-up table in dictionary.csv and turns it into a 2D list</span>\n \n<span style=\"color: #0000FF; font-weight: bold;\">library</span><span style=\"color: #080;\">(</span>plyr<span style=\"color: #080;\">)</span>\ntranslationContent <span style=\"color: #080;\">&lt;-</span> <span style=\"color: #0000FF; font-weight: bold;\">read.<span style=\"\">delim</span></span><span style=\"color: #080;\">(</span><span style=\"color: #ff0000;\">\"dictionary.csv\"</span>, header <span style=\"color: #080;\">=</span> TRUE, sep <span style=\"color: #080;\">=</span> <span style=\"color: #ff0000;\">\"<span style=\"color: #000099; font-weight: bold;\">\\t</span>\"</span>, as.<span style=\"\">is</span> <span style=\"color: #080;\">=</span> TRUE<span style=\"color: #080;\">)</span> \ntranslation <span style=\"color: #080;\">&lt;-</span> dlply<span style=\"color: #080;\">(</span>translationContent ,.<span style=\"color: #080;\">(</span>key<span style=\"color: #080;\">)</span>, <span style=\"color: #0000FF; font-weight: bold;\">function</span><span style=\"color: #080;\">(</span>s<span style=\"color: #080;\">)</span> key <span style=\"color: #080;\">=</span> <span style=\"color: #0000FF; font-weight: bold;\">as.<span style=\"\">list</span></span><span style=\"color: #080;\">(</span>s<span style=\"color: #080;\">)</span><span style=\"color: #080;\">)</span>\n \n<span style=\"color: #0000FF; font-weight: bold;\">save</span><span style=\"color: #080;\">(</span>translation, <span style=\"color: #0000FF; font-weight: bold;\">file</span> <span style=\"color: #080;\">=</span> <span style=\"color: #ff0000;\">\"translation.bin\"</span><span style=\"color: #080;\">)</span></pre></td></tr></table></div></div>\n\n<p>You can consult the whole code on <a href=\"https://github.com/chrislad/multilingualShinyApp\">the github repository</a> and run it directly from <tt>R</tt> using:</p>\n\n<div class=\"my_syntax_box\"><span class=\"my_syntax_selecall\"><a href=\"javascript:;\" onclick=\"selectCode(this); return false;\">Select All</a> </span><span class=\"my_syntax_Bar\">Code:</span><div class=\"my_syntax\"><table><tr><td class=\"line_numbers\"><pre>1\n</pre></td><td class=\"code\"><pre class=\"rsplus\" style=\"font-family:monospace;\">shiny<span style=\"color: #080;\">::</span><span style=\"\">runGitHub</span><span style=\"color: #080;\">(</span><span style=\"color: #ff0000;\">\"multilingualShinyApp\"</span>,<span style=\"color: #ff0000;\">\"chrislad\"</span><span style=\"color: #080;\">)</span></pre></td></tr></table></div></div>\n\n\t\t\t\t\t\t\t\t\t\t\t</div>\n",
    "created" : 1464930006654.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3682464010",
    "id" : "4AD84120",
    "lastKnownWriteTime" : 1464930006,
    "last_content_update" : 1464930006,
    "path" : "/var/folders/__/rl_gw9fn78n27qk67trydm_59b2d9z/T//RtmpW2raic/u1.md",
    "project_path" : null,
    "properties" : {
        "chunk_rendered_width" : "650"
    },
    "relative_order" : 17,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "markdown"
}